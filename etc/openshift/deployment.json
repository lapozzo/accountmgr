{
	"apiVersion": "v1",
	"kind": "Template",
	"metadata": {
		"name": "${APP_NAME}-${APP_VERSION}-deployment"
	},
	"parameters": [
		{
			"name": "APP_NAME",
			"description": "The name assigned to all of the application objects defined in this template.",
			"displayName": "Application Name",
			"required": true,
			"value": "accountmgr"
		},
		{
			"name": "APP_VERSION",
			"description": "The version of this application.",
			"displayName": "Application Version",
			"required": true,
			"value": "v1"
		},
		{
			"name": "IMAGE_TAG",
			"description": "The docker image tag generated in the build process",
			"displayName": "Image Tag",
			"required": true,
			"value": "dev"
		},
		{
			"name": "IMAGE_NAMESPACE",
			"description": "The docker image namespace in the registry",
			"displayName": "Image namespace",
			"required": true,
			"value": "ci-tools"
		},
		{
			"name": "PROJECT_NAMESPACE",
			"description": "The project namespace",
			"displayName": "Project namespace",
			"required": true,
			"value": "ci-tools"
		},
                {
                        "name": "JAEGER_ENDPOINT",
                        "description": "The jaeger collector url",
                        "displayName": "Jaeger collector url",
                        "required": true,
                        "value": "http://jaeger-collector:14268/api/traces"
                }

	],
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"labels": {
					"app": "${APP_NAME}",
					"version": "${APP_VERSION}"
				},
				"name": "${APP_NAME}-${APP_VERSION}"
			},
			"spec": {
				"replicas": 1,
				"selector": {
					"app": "${APP_NAME}",
					"deploymentconfig": "${APP_NAME}-${APP_VERSION}"
				},
				"strategy": {
					"rollingParams": {
						"intervalSeconds": 1,
						"maxSurge": "25%",
						"maxUnavailable": "25%",
						"timeoutSeconds": 600,
						"updatePeriodSeconds": 1
					},
					"type": "Rolling"
				},
				"revisionHistoryLimit": 3,
				"template": {
					"metadata": {
						"annotations": {
							"prometheus.io/path": "/actuator/prometheus",
							"prometheus.io/port": "8080",
							"prometheus.io/scrape": "true"
						},
						"labels": {
							"app": "${APP_NAME}",
							"version": "${APP_VERSION}",
							"deploymentconfig": "${APP_NAME}-${APP_VERSION}"
						}
					},
					"spec": {
						"containers": [
							{
								"image": "${APP_NAME}-${APP_VERSION}:${IMAGE_TAG}",
								"imagePullPolicy": "Always",
								"name": "${APP_NAME}-${APP_VERSION}",
								"ports": [
									{
										"containerPort": 8080,
										"protocol": "TCP"
									}
								],
								"env": [
									{
										"name": "JAEGER_ENDPOINT",
										"value": "${JAEGER_ENDPOINT}"
									},								
									{
										"name": "JAEGER_TAGS",
										"value": "project=${PROJECT_NAMESPACE}"
									}
								],
								"resources": {
									"limits": {
										"cpu": "200m",
										"memory": "256Mi"
									},
									"requests": {
										"cpu": "100m",
										"memory": "128Mi"
									}
								},
								"terminationMessagePath": "/dev/termination-log",
								"livenessProbe": {
									"httpGet": {
										"path": "/actuator/health",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 30,
									"timeoutSeconds": 2,
									"periodSeconds": 30,
									"successThreshold": 1,
									"failureThreshold": 3
								},
								"readinessProbe": {
									"httpGet": {
										"path": "/actuator/health",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 60,
									"timeoutSeconds": 2,
									"periodSeconds": 30,
									"successThreshold": 1,
									"failureThreshold": 3
								}
							}
						],
						"dnsPolicy": "ClusterFirst",
						"restartPolicy": "Always",
						"securityContext": {
							
						},
						"terminationGracePeriodSeconds": 30
					}
				},
				"test": false,
				"triggers": [
					{
						"type": "ConfigChange"
					},
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APP_NAME}-${APP_VERSION}"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${APP_NAME}-${APP_VERSION}:${IMAGE_TAG}",
								"namespace": "${IMAGE_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					}
				]
			},
			"status": {
				
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"openshift.io/generated-by": "OpenShiftNewApp",
					"prometheus.io/port": "8080",
					"prometheus.io/scheme": "http",
					"prometheus.io/scrape": "true",
					"prometheus.io/path": "/actuator/prometheus"
				},
				"labels": {
					"app": "${APP_NAME}",
					"version": "${APP_VERSION}"
				},
				"name": "${APP_NAME}-${APP_VERSION}"
			},
			"spec": {
				"ports": [
					{
						"name": "8080-tcp",
						"port": 8080,
						"protocol": "TCP",
						"targetPort": 8080
					}
				],
				"selector": {
					"app": "${APP_NAME}",
					"deploymentconfig": "${APP_NAME}-${APP_VERSION}"
				},
				"sessionAffinity": "None",
				"type": "ClusterIP"
			},
			"status": {
				"loadBalancer": {
					
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"haproxy.router.openshift.io/disable_cookies": "true",
					"haproxy.router.openshift.io/balance": "roundrobin"
				},
				"labels": {
					"app": "${APP_NAME}",
					"version": "${APP_VERSION}"
				},
				"name": "${APP_NAME}-${APP_VERSION}"
			},
			"spec": {
				"port": {
					"targetPort": "8080-tcp"
				},
				"tls": {
					"termination": "edge"
				},
				"to": {
					"kind": "Service",
					"name": "${APP_NAME}-${APP_VERSION}",
					"weight": 100
				},
				"wildcardPolicy": "None"
			}
		}
	]
}
